// Generated by view binder compiler. Do not edit!
package com.example.tripme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tripme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTripJoiningBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonJoin;

  @NonNull
  public final EditText otpEditBox1;

  @NonNull
  public final EditText otpEditBox2;

  @NonNull
  public final EditText otpEditBox3;

  @NonNull
  public final EditText otpEditBox4;

  @NonNull
  public final LinearLayout rootOtpLayout;

  private ActivityTripJoiningBinding(@NonNull LinearLayout rootView, @NonNull Button buttonJoin,
      @NonNull EditText otpEditBox1, @NonNull EditText otpEditBox2, @NonNull EditText otpEditBox3,
      @NonNull EditText otpEditBox4, @NonNull LinearLayout rootOtpLayout) {
    this.rootView = rootView;
    this.buttonJoin = buttonJoin;
    this.otpEditBox1 = otpEditBox1;
    this.otpEditBox2 = otpEditBox2;
    this.otpEditBox3 = otpEditBox3;
    this.otpEditBox4 = otpEditBox4;
    this.rootOtpLayout = rootOtpLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTripJoiningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTripJoiningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_trip_joining, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTripJoiningBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonJoin;
      Button buttonJoin = ViewBindings.findChildViewById(rootView, id);
      if (buttonJoin == null) {
        break missingId;
      }

      id = R.id.otp_edit_box1;
      EditText otpEditBox1 = ViewBindings.findChildViewById(rootView, id);
      if (otpEditBox1 == null) {
        break missingId;
      }

      id = R.id.otp_edit_box2;
      EditText otpEditBox2 = ViewBindings.findChildViewById(rootView, id);
      if (otpEditBox2 == null) {
        break missingId;
      }

      id = R.id.otp_edit_box3;
      EditText otpEditBox3 = ViewBindings.findChildViewById(rootView, id);
      if (otpEditBox3 == null) {
        break missingId;
      }

      id = R.id.otp_edit_box4;
      EditText otpEditBox4 = ViewBindings.findChildViewById(rootView, id);
      if (otpEditBox4 == null) {
        break missingId;
      }

      id = R.id.root_otp_layout;
      LinearLayout rootOtpLayout = ViewBindings.findChildViewById(rootView, id);
      if (rootOtpLayout == null) {
        break missingId;
      }

      return new ActivityTripJoiningBinding((LinearLayout) rootView, buttonJoin, otpEditBox1,
          otpEditBox2, otpEditBox3, otpEditBox4, rootOtpLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
